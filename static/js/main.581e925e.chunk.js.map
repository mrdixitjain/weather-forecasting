{"version":3,"sources":["helpers/api.js","Components/Navbar.js","Components/DailyWeather.js","helpers/Helpers.js","Components/CurrentWeather.js","Components/HourlyWeather.js","Components/Weather.js","Components/Loading.js","App.js","index.js"],"names":["getCity","input","document","getElementById","value","cityName","console","log","replace","buildCoordsUrl","buildForecastUrl","coordinates","units","lat","lon","getCoordinates","url","a","fetch","response","json","weatherData","coord","name","country","sys","getForecast","forecastData","Navbar","props","className","onSubmit","getWeatherData","placeholder","id","DailyWeather","daily","days","nd","Date","getDay","class","src","weather","icon","alt","description","parseInt","pop","humidity","temp","max","min","Object","keys","map","key","index","day","formatTime","unix","offset","timeFormat","amOrPm","date","fromUnixTime","toUTCString","hour","slice","minute","CurrentWeather","hourly","current","timezone_offset","sunrise","sunset","wind_speed","feels_like","rain","pressure","uvi","HourlyWeather","n","getHours","Math","ceil","main","Weather","Loading","getWeather","city","apiFncs","coordUrl","coords","requestForecastUrl","App","e","preventDefault","setState","state","isLoading","this","Component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.581e925e.chunk.js","sourcesContent":["\n// Gets city name from form\nfunction getCity() {\n  var input = document.getElementById('city-input');\n  if (!input) {\n    input = {value: 'jaipur'};\n  }\n  const cityName = input.value;\n  console.log(cityName);\n  if (cityName) {\n    console.log(\"hello\");\n    // remove whitespace for the api call\n    return cityName\n      .replace(/(\\s+$|^\\s+)/g, '') // remove whitespace from begining and end of string\n      .replace(/(,\\s+)/g, ',') // remove any white space that follows a comma\n      .replace(/(\\s+,)/g, ',') // remove any white space that preceeds a comma\n      .replace(/\\s+/g, '+'); // replace any remaining white space with +, so it works in api call\n  }\n  return 'Jaipur';\n}\n\n// To get full weather data, 2 API requests need to be made. The current weather response returns\n// coordinates, which can then be used to make a request for the full forecast.\n\n// Builds request url to obtain coordinates\nfunction buildCoordsUrl(cityName) {\n  return `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&APPID=20f7632ffc2c022654e4093c6947b4f4`;\n}\n\n// Builds request url to obtain weather forecast\nfunction buildForecastUrl(coordinates, units) {\n  return `https://api.openweathermap.org/data/2.5/onecall?lat=${coordinates.lat}&lon=${coordinates.lon}&exclude=minutely,alerts&units=${units}&appid=20f7632ffc2c022654e4093c6947b4f4`;\n}\n\n// Returns coordinates and city name for a specified city name.\nasync function getCoordinates(url) {\n  const response = await fetch(url);\n  const weatherData = await response.json();\n  const { coord } = weatherData;\n  coord.name = weatherData.name;\n  coord.country = weatherData.sys.country;\n\n  return coord;\n}\n\n// Returns forecast data for specified coordinates.\nasync function getForecast(url) {\n  const response = await fetch(url);\n  const forecastData = await response.json();\n\n  return forecastData;\n}\n\nexport {\n  getCity,\n  buildCoordsUrl,\n  buildForecastUrl,\n  getCoordinates,\n  getForecast,\n};","import '../css/Navbar.css';\nconst Navbar = (props) => {\n  return(\n    <div className=\"nav\">\n      <p className='navp'>\n        Weather-App\n      </p>\n      <form \n        onSubmit={props.getWeatherData}\n        className='navf'\n      >\n        <input\n          placeholder='Enter a city' \n          id=\"city-input\" \n          className='navi'\n        />\n      </form>\n    </div>\n  );    \n}\n\nexport default Navbar;","import '../css/Weather.css';\n\nconst DailyWeather = (props) => {\n  const daily = props.daily;\n  const days = ['SUNDAY', 'MONDAY', 'TUESDAY', 'WEDNESDAY', 'THRUSDAY', 'FRIDAY', 'SATURDAY'];\n  var d = new Date();\n  const nd = d.getDay();\n  return (\n    <div className=\"col-md-12 order-md-5 mt-5\">\n      <div className='containercurr'>\n        <div class=\"mb-4 list-group list-group-flush\">\n          <div class=\"list-group-item d-flex justify-content-between align-item-center row px-0 py-md-0 border-bottom text-align-center day-header\">\n            <div class=\"col text-left d-none d-md-block d-lg-block d-xl-block text-muted\">\n              <small>DAY</small>\n            </div>\n            <div class=\"col d-none d-md-block d-lg-block d-xl-bloc text-mutedk\">\n            </div>\n            <div class=\"col d-none d-md-block d-lg-block d-xl-block text-muted\">\n              <small>CHANCE OF RAIN</small>\n            </div>\n            <div class=\"col d-none d-md-block d-lg-block d-xl-block text-muted\">\n              <small>HUMIDITY</small>\n            </div>\n            <div class=\"col text-right d-none d-md-block d-lg-block d-xl-block text-muted\">\n              <small>TEMPERATURE</small>\n            </div>\n          </div>\n          <div class=\"list-group-item d-flex justify-content-between align-item-center row px-0 py-md-0 border-bottom\">\n            <div class=\"col\">\n              <p class=\"mb-0\">Today</p>\n            </div>\n            <div class=\"col px-2 text-align-center\">\n              <img \n                class=\"img-fluid weather-img\" \n                src={'https://openweathermap.org/img/wn/'+daily[0].weather[0].icon+'@4x.png'}\n                alt={daily[0].weather.description} \n              />\n            </div>\n            <div class=\"col d-none d-md-block d-lg-block d-xl-block text-align-center\">\n              {parseInt(daily[0].pop*100)}%\n            </div>\n            <div class=\"col d-none d-md-block text-align-center\">\n              {parseInt(daily[0].humidity)}%\n            </div>\n            <div class=\"col d-flex flex-row justify-content-end\">\n              <p class=\" mb-0\">H:{parseInt(daily[0].temp.max)+'° '}</p>\n              <p class=\" ml-2 mb-0\">L:{parseInt(daily[0].temp.min)}°</p>\n            </div>\n          </div>\n          {Object.keys(daily).map((key, index) => {\n            key = parseInt(key);\n            if (key === 0) {\n              return null;\n            }\n            var day = key + nd;\n            day = day % 7;\n            return (\n              <div class=\"list-group-item d-flex justify-content-between align-item-center row px-0 py-md-0 border-bottom\">\n                <div class=\"col\">\n                  <p class=\"mb-0\">{days[day]}</p>\n                </div>\n                <div class=\"col px-2 text-align-center\">\n                  <img \n                    class=\"img-fluid weather-img\" \n                    src={'https://openweathermap.org/img/wn/'+daily[key].weather[0].icon+'@4x.png'}\n                    alt={daily[0].weather.description} \n                  />\n                </div>\n                <div class=\"col d-none d-md-block d-lg-block d-xl-block text-align-center\">\n                  {parseInt(daily[key].pop*100)}%\n                </div>\n                <div class=\"col d-none d-md-block text-align-center\">\n                  {parseInt(daily[key].humidity)}%\n                </div>\n                <div class=\"col d-flex flex-row justify-content-end\">\n                  <p class=\" mb-0\">H:{parseInt(daily[key].temp.max)+'° '}</p>\n                  <p class=\" ml-2 mb-0\">L:{parseInt(daily[key].temp.min)}°</p>\n                </div>\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default DailyWeather;","import fromUnixTime from 'date-fns/fromUnixTime';\nfunction formatTime(unix, offset, timeFormat = 'full') {\n  console.log(unix, offset);\n  const date = fromUnixTime(unix + offset).toUTCString();\n  let hour = date.slice(17, 19);\n  const minute = date.slice(20, 22);\n  let amOrPm;\n\n  if (hour > 11) {\n    amOrPm = 'pm';\n  } else {\n    amOrPm = 'am';\n  }\n\n  // change 24hr to 12hr time\n  if (hour > 12) {\n    hour -= 12;\n  }\n\n  // change am times to 12hr time\n  if (hour < 10 && amOrPm === 'am') {\n    hour = hour.slice(1, 2);\n  }\n\n  // midnight formating\n  if (hour === '0') {\n    hour = 12;\n  }\n\n  // return just the hour\n  if (timeFormat === 'hour') {\n    return `${hour} ${amOrPm}`;\n  }\n  return `${hour}:${minute} ${amOrPm}`;\n}\n\nexport {formatTime};","import '../css/Weather.css';\nimport { formatTime } from '../helpers/Helpers';\n\nconst CurrentWeather = (props) => {\n  const weatherData = props.weatherData;\n  const hourly = weatherData.hourly;\n  const current = weatherData.current;\n  const daily = weatherData.daily;\n  const offset = parseInt(weatherData.timezone_offset);\n  const sunrise = formatTime(parseInt(current.sunrise), offset);\n  const sunset = formatTime(parseInt(current.sunset), offset);\n\n  return (\n    <div className='col-md-12 order-md-4 bg-dark pt-5 pb-5 mt-2'>\n      <div className='containercurr'>\n        <div className='row list-group-flush flex-column flex-md-row justify-content-center border-bottom  border-dark'>\n          <li className='list-group-item pl-md-2 text-md-center weather-description bg-dark text-white w-72'>\n            <small className=\"text-muted\">SUNRISE</small>\n            <h5 className=\"mb-0 font-weight-normal\">{sunrise}</h5>\n          </li>\n          <li className='list-group-item pl-md-2 text-md-center weather-description bg-dark text-white w-72'>\n            <small className=\"text-muted\">SUNSET</small>\n            <h5 className=\"mb-0 font-weight-normal\">{sunset}</h5>\n          </li>\n          <li className='list-group-item pl-md-2 text-md-center weather-description bg-dark text-white w-72'>\n            <small className=\"text-muted\">CHANCE OF RAIN</small>\n            <h5 className=\"mb-0 font-weight-normal\">{parseInt(hourly[0].pop*100)}%</h5>\n          </li>\n          <li className='list-group-item pl-md-2 text-md-center weather-description bg-dark text-white w-72'>\n            <small className=\"text-muted\">HUMIDITY</small>\n            <h5 className=\"mb-0 font-weight-normal\">{parseInt(current.humidity)}</h5>\n          </li>\n          <li className='list-group-item pl-md-2 text-md-center weather-description bg-dark text-white w-72'>\n            <small className=\"text-muted\">WIND</small>\n            <h5 className=\"mb-0 font-weight-normal\">{parseInt(current.wind_speed)} Km/Hr</h5>\n          </li>\n          <li className='list-group-item pl-md-2 text-md-center weather-description bg-dark text-white w-72'>\n            <small className=\"text-muted\">FEELS LIKE</small>\n            <h5 className=\"mb-0 font-weight-normal\">{parseInt(current.feels_like)}°</h5>\n          </li>\n          <li className='list-group-item pl-md-2 text-md-center weather-description bg-dark text-white w-72'>\n            <small className=\"text-muted\">PRECIPITATION</small>\n            <h5 className=\"mb-0 font-weight-normal\">{daily[0].rain}CM</h5>\n          </li>\n          <li className='list-group-item pl-md-2 text-md-center weather-description bg-dark text-white w-72'>\n            <small className=\"text-muted\">PRESSURE</small>\n            <h5 className=\"mb-0 font-weight-normal\">{parseInt(current.pressure)} hPa</h5>\n          </li>\n          <li className='list-group-item pl-md-2 text-md-center weather-description bg-dark text-white w-72'>\n            <small className=\"text-muted\">VISIBILITY</small>\n            <h5 className=\"mb-0 font-weight-normal\">{sunset}</h5>\n          </li>\n          <li className='list-group-item pl-md-2 text-md-center weather-description bg-dark text-white w-72'>\n            <small className=\"text-muted\">UV INDEX</small>\n            <h5 className=\"mb-0 font-weight-normal\">{current.uvi}</h5>\n          </li>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CurrentWeather;","import '../css/Weather.css';\n\nconst HourlyWeather = (props) => {\n    const hourly = props.hourly;\n    var d = new Date();\n    const n = d.getHours();\n\n    return (\n    <div className=\"col-md-8 container order-md-2\">\n      <div className='d-flex flex-row overflow-auto border-top border-bottom pb-2 pt-2'>\n        <div className=\"d-flex flex-column col-2 align-item-center text-align-center px-4 \">\n          <p className=\"h-25\">\n            <b>Now</b>\n            </p>\n          <p className=\"text-primary\">{parseInt(hourly[0].pop*100)===0 ? \"\" : parseInt(hourly[0].pop*100)+'%'}</p>\n          <figure>\n            <img \n              className='img-fluid weather-img'\n              src={'https://openweathermap.org/img/wn/'+hourly[0].weather[0].icon+'@4x.png'}\n              alt={hourly[0].weather.description}\n            />\n          </figure>\n          <p>{Math.ceil(hourly[0].temp)}°</p>\n        </div>\n\n        {Object.keys(hourly).map((key, index) => {\n          key = parseInt(key);\n          if (key === 0 || key > 25) {\n            return null;\n          }\n          return (\n            <div key={key} className=\"d-flex flex-column col-2 align-item-center text-align-center px-4 \">\n              <p className=\"h-25\">{(n+parseInt(key))%24}</p>\n              <p className=\"text-primary\">{parseInt(hourly[key].pop*100)===0 ? \"\" : parseInt(hourly[key].pop*100)+'%'}</p>\n              <figure>\n                <img \n                  className='img-fluid weather-img'\n                  src={'https://openweathermap.org/img/wn/'+hourly[key].weather[0].icon+'@4x.png'}\n                  alt={hourly[key].weather.description}\n                />\n              </figure>\n              <p>{Math.ceil(hourly[key].temp)}°</p>\n            </div>\n          )\n        })}  \n      </div>\n      <div className=\"mt-2 mb-2\">\n        Today : {props.main}. Today high will be {Math.ceil(props.max)}°. Today low will be {Math.ceil(props.min)}°.\n      </div>\n    </div>\n  );\n}\n\nexport default HourlyWeather;","import '../css/Weather.css';\nimport DailyWeather from './DailyWeather';\nimport CurrentWeather from './CurrentWeather';\nimport HourlyWeather from './HourlyWeather';\n\nconst Weather = (props) => {\n  const weatherData = props.weatherData;\n  const current = props.weatherData.current;\n  const daily = props.weatherData.daily;\n  const hourly = props.weatherData.hourly;\n  return (\n    <div className=\"mt-10\">\n      <div className=\"row align-item-center justify-content-center\">\n        <div className=\"col-md-4 container order-md-1\">\n          <div className='d-flex flex-column align-item-center' >\n            <h2>{weatherData.name}</h2>\n            <h4>{current.weather[0].main}</h4>\n            <h1 className='ml-3'>{Math.ceil(current.temp)}°</h1>\n            <div className='d-flex'>\n              <p className='mx-1'>H:{Math.ceil(daily[0].temp.max)}°</p>\n              <p className='mx-1'>L:{Math.ceil(daily[0].temp.min)}°</p>\n            </div>\n          </div>\n        </div>\n        <HourlyWeather \n          hourly={hourly} \n          main={current.weather[0].main}\n          max={daily[0].temp.max}\n          min={daily[0].temp.min}\n        />\n        <CurrentWeather weatherData={weatherData}/>\n        <DailyWeather daily={daily} />\n      </div>\n    </div>\n  );\n}\n\nexport default Weather;","import '../css/Loading.css';\n\nconst Loading = () => {\n  return (\n    <div className=\"loader-container container\">\n      <div className=\"loader\"></div>\n    </div>\n  );\n}\nexport default Loading; \n","import React, { Component} from \"react\";\nimport * as apiFncs from \"./helpers/api\";\nimport Navbar from './Components/Navbar';\nimport Weather from './Components/Weather';\nimport Loading from \"./Components/Loading\";\n\nasync function getWeather() {\n  const city = apiFncs.getCity();\n  const coordUrl = apiFncs.buildCoordsUrl(city);\n  const coords = await apiFncs.getCoordinates(coordUrl);\n  const requestForecastUrl = apiFncs.buildForecastUrl(coords, 'metric');\n  const weatherData = await apiFncs.getForecast(requestForecastUrl);\n  weatherData.name = coords.name;\n  weatherData.country = coords.country;\n  return weatherData;\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      weatherData: {},\n      isLoading: true,\n    }\n  }  \n  async componentDidMount() {\n    // console.log(\"hello\");\n    const weatherData = await getWeather();\n    this.setState({\n      weatherData: weatherData,\n      isLoading: false,\n    });\n  }\n  getWeatherData = async (e) => {\n    e.preventDefault();\n    const weatherData = await getWeather();\n    this.setState({\n      weatherData: weatherData\n    });\n  }  \n  render() {\n    if (this.state.isLoading) {\n      return (\n        <Loading />\n      );\n    }\n    return (\n      <div>\n        <Navbar\n          getWeatherData={this.getWeatherData} \n        />\n        <Weather \n          weatherData={this.state.weatherData}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}